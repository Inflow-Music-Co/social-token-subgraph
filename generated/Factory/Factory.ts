// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class SocialTokenCreated extends ethereum.Event {
  get params(): SocialTokenCreated__Params {
    return new SocialTokenCreated__Params(this);
  }
}

export class SocialTokenCreated__Params {
  _event: SocialTokenCreated;

  constructor(event: SocialTokenCreated) {
    this._event = event;
  }

  get socialToken(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get creator(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Unwhitelisted extends ethereum.Event {
  get params(): Unwhitelisted__Params {
    return new Unwhitelisted__Params(this);
  }
}

export class Unwhitelisted__Params {
  _event: Unwhitelisted;

  constructor(event: Unwhitelisted) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Whitelisted extends ethereum.Event {
  get params(): Whitelisted__Params {
    return new Whitelisted__Params(this);
  }
}

export class Whitelisted__Params {
  _event: Whitelisted;

  constructor(event: Whitelisted) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Factory__createInputDataStruct extends ethereum.Tuple {
  get creator(): Address {
    return this[0].toAddress();
  }

  get collateral(): Address {
    return this[1].toAddress();
  }

  get maxSupply(): BigInt {
    return this[2].toBigInt();
  }

  get slope(): BigInt {
    return this[3].toBigInt();
  }

  get name(): string {
    return this[4].toString();
  }

  get symbol(): string {
    return this[5].toString();
  }
}

export class Factory extends ethereum.SmartContract {
  static bind(address: Address): Factory {
    return new Factory("Factory", address);
  }

  create(data: Factory__createInputDataStruct): Address {
    let result = super.call(
      "create",
      "create((address,address,uint256,uint256,string,string)):(address)",
      [ethereum.Value.fromTuple(data)]
    );

    return result[0].toAddress();
  }

  try_create(
    data: Factory__createInputDataStruct
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "create",
      "create((address,address,uint256,uint256,string,string)):(address)",
      [ethereum.Value.fromTuple(data)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getToken(creator: Address): Address {
    let result = super.call("getToken", "getToken(address):(address)", [
      ethereum.Value.fromAddress(creator)
    ]);

    return result[0].toAddress();
  }

  try_getToken(creator: Address): ethereum.CallResult<Address> {
    let result = super.tryCall("getToken", "getToken(address):(address)", [
      ethereum.Value.fromAddress(creator)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  isWhitelisted(account: Address): boolean {
    let result = super.call("isWhitelisted", "isWhitelisted(address):(bool)", [
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_isWhitelisted(account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isWhitelisted",
      "isWhitelisted(address):(bool)",
      [ethereum.Value.fromAddress(account)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  unwhitelist(account: Address): boolean {
    let result = super.call("unwhitelist", "unwhitelist(address):(bool)", [
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_unwhitelist(account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("unwhitelist", "unwhitelist(address):(bool)", [
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  whitelist(account: Address): boolean {
    let result = super.call("whitelist", "whitelist(address):(bool)", [
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_whitelist(account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("whitelist", "whitelist(address):(bool)", [
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class CreateCall extends ethereum.Call {
  get inputs(): CreateCall__Inputs {
    return new CreateCall__Inputs(this);
  }

  get outputs(): CreateCall__Outputs {
    return new CreateCall__Outputs(this);
  }
}

export class CreateCall__Inputs {
  _call: CreateCall;

  constructor(call: CreateCall) {
    this._call = call;
  }

  get data(): CreateCallDataStruct {
    return changetype<CreateCallDataStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class CreateCall__Outputs {
  _call: CreateCall;

  constructor(call: CreateCall) {
    this._call = call;
  }

  get socialTokenAddress(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class CreateCallDataStruct extends ethereum.Tuple {
  get creator(): Address {
    return this[0].toAddress();
  }

  get collateral(): Address {
    return this[1].toAddress();
  }

  get maxSupply(): BigInt {
    return this[2].toBigInt();
  }

  get slope(): BigInt {
    return this[3].toBigInt();
  }

  get name(): string {
    return this[4].toString();
  }

  get symbol(): string {
    return this[5].toString();
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetWhitelistEnabledCall extends ethereum.Call {
  get inputs(): SetWhitelistEnabledCall__Inputs {
    return new SetWhitelistEnabledCall__Inputs(this);
  }

  get outputs(): SetWhitelistEnabledCall__Outputs {
    return new SetWhitelistEnabledCall__Outputs(this);
  }
}

export class SetWhitelistEnabledCall__Inputs {
  _call: SetWhitelistEnabledCall;

  constructor(call: SetWhitelistEnabledCall) {
    this._call = call;
  }

  get enabled(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class SetWhitelistEnabledCall__Outputs {
  _call: SetWhitelistEnabledCall;

  constructor(call: SetWhitelistEnabledCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UnwhitelistCall extends ethereum.Call {
  get inputs(): UnwhitelistCall__Inputs {
    return new UnwhitelistCall__Inputs(this);
  }

  get outputs(): UnwhitelistCall__Outputs {
    return new UnwhitelistCall__Outputs(this);
  }
}

export class UnwhitelistCall__Inputs {
  _call: UnwhitelistCall;

  constructor(call: UnwhitelistCall) {
    this._call = call;
  }

  get account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UnwhitelistCall__Outputs {
  _call: UnwhitelistCall;

  constructor(call: UnwhitelistCall) {
    this._call = call;
  }

  get success(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class WhitelistCall extends ethereum.Call {
  get inputs(): WhitelistCall__Inputs {
    return new WhitelistCall__Inputs(this);
  }

  get outputs(): WhitelistCall__Outputs {
    return new WhitelistCall__Outputs(this);
  }
}

export class WhitelistCall__Inputs {
  _call: WhitelistCall;

  constructor(call: WhitelistCall) {
    this._call = call;
  }

  get account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class WhitelistCall__Outputs {
  _call: WhitelistCall;

  constructor(call: WhitelistCall) {
    this._call = call;
  }

  get success(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}
